<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The index on Crossplane</title>
    <link>/v1.8/</link>
    <description>Recent content in The index on Crossplane</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/v1.8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>/v1.8/media/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.8/media/readme/</guid>
      <description>Crossplane Documentation Media The sources of the images in this file are:
logo.svg - https://github.com/crossplane/artwork/tree/420102/logo composition-*.svg - https://drive.google.com/drive/folders/1ld-XNglPQBT4ue9IBVuDs4HQRizr-5AY?usp=sharing </description>
    </item>
    
    <item>
      <title>provider-aws</title>
      <link>/v1.8/cloud-providers/aws/aws-provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.8/cloud-providers/aws/aws-provider/</guid>
      <description>Adding Amazon Web Services (AWS) to Crossplane In this guide, we will walk through the steps necessary to configure your AWS account to be ready for integration with Crossplane. This will be done by adding an AWS ProviderConfig resource type, which enables Crossplane to communicate with an AWS account.
Requirements Prior to adding AWS to Crossplane, following steps need to be taken
Crossplane is installed in a k8s cluster provider-aws is installed in the same cluster kubectl is configured to communicate with the same cluster Step 1: Configure aws CLI Crossplane uses AWS security credentials, and stores them as a secret which is managed by an AWS ProviderConfig instance.</description>
    </item>
    
    <item>
      <title>provider-azure</title>
      <link>/v1.8/cloud-providers/azure/azure-provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.8/cloud-providers/azure/azure-provider/</guid>
      <description>Adding Microsoft Azure to Crossplane In this guide, we will walk through the steps necessary to configure your Azure account to be ready for integration with Crossplane. The general steps we will take are summarized below:
Create a new service principal (account) that Crossplane will use to create and manage Azure resources Add the required permissions to the account Consent to the permissions using an administrator account Preparing your Microsoft Azure Account In order to manage resources in Azure, you must provide credentials for a Azure service principal that Crossplane can use to authenticate.</description>
    </item>
    
    <item>
      <title>provider-gcp</title>
      <link>/v1.8/cloud-providers/gcp/gcp-provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.8/cloud-providers/gcp/gcp-provider/</guid>
      <description>Adding Google Cloud Platform (GCP) to Crossplane In this guide, we will walk through the steps necessary to configure your GCP account to be ready for integration with Crossplane. The general steps we will take are summarized below:
Create a new example project that all resources will be deployed to Enable required APIs such as Kubernetes and CloudSQL Create a service account that will be used to perform GCP operations from Crossplane Assign necessary roles to the service account Enable billing For your convenience, the specific steps to accomplish those tasks are provided for you below using either the gcloud command line tool, or the GCP console in a web browser.</description>
    </item>
    
  </channel>
</rss>
