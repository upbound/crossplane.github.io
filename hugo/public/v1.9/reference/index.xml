<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reference on Crossplane</title>
    <link>/v1.9/reference/</link>
    <description>Recent content in Reference on Crossplane</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/v1.9/reference/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install</title>
      <link>/v1.9/reference/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/install/</guid>
      <description>Install Crossplane Crossplane can be easily installed into any existing Kubernetes cluster using the regularly published Helm chart. The Helm chart contains all the custom resources and controllers needed to deploy and configure Crossplane.
Pre-requisites Kubernetes cluster, minimum version v1.16.0+ Helm, minimum version v3.0.0+. Installation Helm charts for Crossplane are currently published to the stable and master channels.
Stable The stable channel is the most recent release of Crossplane that is considered ready for the community.</description>
    </item>
    
    <item>
      <title>Configure</title>
      <link>/v1.9/reference/configure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/configure/</guid>
      <description>Configure Your Cloud Provider Account In order for Crossplane to be able to manage resources in a specific cloud provider, you will need to create an account for Crossplane to use. Use the links below for cloud-specific instructions to create an account that can be used throughout the guides:
Google Cloud Platform (GCP) Service Account Microsoft Azure Service Principal Amazon Web Services (AWS) IAM User Once you have configured your cloud provider account, you can get started provisioning resources!</description>
    </item>
    
    <item>
      <title>Uninstall</title>
      <link>/v1.9/reference/uninstall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/uninstall/</guid>
      <description>Uninstalling Crossplane has a number of components that must be cleaned up in order to guarantee proper removal from the cluster. When deleting objects, it is best to consider parent-child relationships and clean up the children first to ensure the proper action is taken externally. For instance, cleaning up provider-aws before deleting an RDSInstance will result in the RDS instance remaining provisioned on AWS as the controller responsible for cleaning it up will have already been deleted.</description>
    </item>
    
    <item>
      <title>Composition</title>
      <link>/v1.9/reference/composition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/composition/</guid>
      <description>Overview This reference provides detailed examples of defining, configuring, and using Composite Resources in Crossplane. You can also refer to Crossplane&amp;rsquo;s API documentation for more details. If you&amp;rsquo;re looking for a more general overview of Composite Resources and Composition in Crossplane, try the Composite Resources page under Concepts.
Composite Resources and Claims The type and most of the schema of Composite Resources and claims are largely of your own choosing, but there is some common &amp;lsquo;machinery&amp;rsquo; injected into them.</description>
    </item>
    
    <item>
      <title>xpkg Specification</title>
      <link>/v1.9/reference/xpkg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/xpkg/</guid>
      <description>Overview Crossplane supports two types of packages: Providers and Configurations. These packages are distributed as generic OCI images, which contain YAML content informing the Crossplane package manager how to alter the state of a cluster by installing objects that configure new resource types, and starting controllers to reconcile them. An OCI image that contains valid Crossplane package content is commonly referred to as an xpkg (&amp;ldquo;ex-package&amp;rdquo;). This document provides the specification for a valid xpkg, which can be considered a superset of the requirements detailed in the OCI image specification.</description>
    </item>
    
    <item>
      <title>Troubleshoot</title>
      <link>/v1.9/reference/troubleshoot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/troubleshoot/</guid>
      <description>Troubleshooting Requested Resource Not Found Resource Status and Conditions Resource Events Crossplane Logs Provider Logs Pausing Crossplane Pausing Providers Deleting When a Resource Hangs Installing Crossplane Package Handling Crossplane Package Dependency Requested Resource Not Found If you use the kubectl Crossplane plugin to install a Provider or Configuration (e.g. kubectl crossplane install provider crossplane/provider-aws:master) and get the server could not find the requested resource error, more often than not, that is an indicator that the kubectl Crossplane you&amp;rsquo;re using is outdated.</description>
    </item>
    
    <item>
      <title>Learn More</title>
      <link>/v1.9/reference/learn_more/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/learn_more/</guid>
      <description>Learn More If you have any questions, please drop us a note on Crossplane Slack or contact us!
Learn more about using Crossplane
Latest Design Docs Roadmap Crossplane Architecture GitLab deploys into multiple clouds from kubectl using Crossplane CNCF Talks &amp;amp; Community Presentations Software Engineering Daily - Intro Podcast Writing Kubernetes controllers to extend Crossplane
Keep the Space Shuttle Flying: Writing Robust Operators Best practices for building Kubernetes Operators Programming Kubernetes Book Contributor Guide Join the growing Crossplane community and get involved!</description>
    </item>
    
    <item>
      <title>Release Cycle</title>
      <link>/v1.9/reference/release-cycle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v1.9/reference/release-cycle/</guid>
      <description>Release Cycle Starting with the v1.0.0 release, Crossplane is released on an eight week cadence. A cycle is comprised of three general stages:
Weeks 1-6: Active Development Week 7: Feature Freeze Week 8: Code Freeze This results in six releases per year, with the most recent three releases being maintained at any given time. When a new release is cut, the fourth most recent release reaches end of life (EOL). Users can expect any given release to be maintained for six months.</description>
    </item>
    
  </channel>
</rss>
